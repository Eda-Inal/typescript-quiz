[
    {
        "question": "What is React?",
        "answers": [
            { "id": "a", "text": "A programming language", "isCorrect": false },
            { "id": "b", "text": "A JavaScript framework", "isCorrect": false },
            { "id": "c", "text": "A JavaScript library", "isCorrect": true },
            { "id": "d", "text": "A web browser", "isCorrect": false }
        ],
        "id": 1,
        "clicked":false
        
    },
    {
        "question": "What are components in React?",
        "answers": [
            { "id": "a", "text": "HTML elements", "isCorrect": false },
            { "id": "b", "text": "Reusable pieces of UI", "isCorrect": true },
            { "id": "c", "text": "CSS styles", "isCorrect": false },
            { "id": "d", "text": "JavaScript variables", "isCorrect": false }
        ],
        "id": 2,
        "clicked":false
    },
    {
        "question": "What is the purpose of state in a React component?",
        "answers": [
            { "id": "a", "text": "To hold static data", "isCorrect": false },
            { "id": "b", "text": "To store local component data that can change", "isCorrect": true },
            { "id": "c", "text": "To manage global data", "isCorrect": false },
            { "id": "d", "text": "To define CSS styles", "isCorrect": false }
        ],
        "id": 3,
        "clicked":false
    },
    {
        "question": "What is JSX?",
        "answers": [
            { "id": "a", "text": "A JavaScript syntax extension for HTML-like code", "isCorrect": true },
            { "id": "b", "text": "A new programming language", "isCorrect": false },
            { "id": "c", "text": "A CSS preprocessor", "isCorrect": false },
            { "id": "d", "text": "A type of database", "isCorrect": false }
        ],
        "id": 4,
        "clicked":false
    },
    {
        "question": "How do you pass data from a parent component to a child component in React?",
        "answers": [
            { "id": "a", "text": "Through props", "isCorrect": true },
            { "id": "b", "text": "Using local storage", "isCorrect": false },
            { "id": "c", "text": "By creating a global variable", "isCorrect": false },
            { "id": "d", "text": "Through event listeners", "isCorrect": false }
        ],
        "id": 5,
        "clicked":false
    },{
        "question": "What is the virtual DOM in React?",
        "answers": [
          { "id": "a", "text": "A copy of the real DOM for debugging purposes", "isCorrect": false },
          { "id": "b", "text": "A lightweight representation of the real DOM", "isCorrect": true },
          { "id": "c", "text": "A feature of the browser", "isCorrect": false },
          { "id": "d", "text": "A new programming language", "isCorrect": false }
        ],
        "id": 6,
        "clicked": false
      },
      {
        "question": "What is a key in React and why is it important?",
        "answers": [
          { "id": "a", "text": "It identifies elements uniquely in a list for efficient updates", "isCorrect": true },
          { "id": "b", "text": "It is used for event handling", "isCorrect": false },
          { "id": "c", "text": "It is used for passing data between components", "isCorrect": false },
          { "id": "d", "text": "It defines the component's state", "isCorrect": false }
        ],
        "id": 7,
        "clicked": false
      },
      {
        "question": "What lifecycle method is used for making API calls in class components?",
        "answers": [
          { "id": "a", "text": "componentDidMount", "isCorrect": true },
          { "id": "b", "text": "componentWillUnmount", "isCorrect": false },
          { "id": "c", "text": "render", "isCorrect": false },
          { "id": "d", "text": "constructor", "isCorrect": false }
        ],
        "id": 8,
        "clicked": false
      },
      {
        "question": "What hook is used to manage side effects in functional components?",
        "answers": [
          { "id": "a", "text": "useEffect", "isCorrect": true },
          { "id": "b", "text": "useState", "isCorrect": false },
          { "id": "c", "text": "useContext", "isCorrect": false },
          { "id": "d", "text": "useReducer", "isCorrect": false }
        ],
        "id": 9,
        "clicked": false
      },
      {
        "question": "How do you optimize performance in React applications?",
        "answers": [
          { "id": "a", "text": "Using the virtual DOM and memoization", "isCorrect": true },
          { "id": "b", "text": "Only using functional components", "isCorrect": false },
          { "id": "c", "text": "Always using class components", "isCorrect": false },
          { "id": "d", "text": "Avoiding the use of hooks", "isCorrect": false }
        ],
        "id": 10,
        "clicked": false
      }
      
]
